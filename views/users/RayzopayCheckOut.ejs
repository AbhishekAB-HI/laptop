<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Payment page</title>
</head>

<body>

  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <script>

    const orderId = "<%=orderid%>"
    const total = "<%=total%>"

    var options = {
      "key": "rzp_test_7eq8NAEJrZ1rMD", // Enter the Key ID generated from the Dashboard
      "amount": total, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
      "currency": "INR",
      "name": "Abhishek", //your business name
      "description": "Test Transaction",
      "image": "https://example.com/your_logo",
      "order_id": orderId, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
      "handler": async function (response) {
      
        var value = '<%= JSON.stringify(productdata) %>';
        console.log(value, 'valuessssssssssss');
        const responce = await fetch("/PaymentSuccess", {
          method: "post",
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ value })
        });

        if (responce.ok) {
          showAlertpage();
        } else {
          // Handle the case where the request was not successful
          console.error(`Request failed with status: ${response.status}`);
        }

      },
      "prefill": { //We recommend using the prefill parameter to auto-fill customer's contact information, especially their phone number
        "name": "Gaurav Kumar", //your customer's name
        "email": "gaurav.kumar@example.com",
        "contact": "9000090000"  //Provide the customer's phone number for better conversion rates 
      },
      "notes": {
        "address": "Razorpay Corporate Office"
      },
      "theme": {
        "color": "#3399cc"
      }
    };
    var rzp1 = new Razorpay(options);
    rzp1.on('payment.failed', async function (response) {
      console.log("reached web");
      var value = '<%= JSON.stringify(productdata) %>';
        console.log(value, 'valuessssssssssss');
        const responce = await fetch("/PaymentFailed", {
          method: "post",
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ value })
        });
         if(responce.ok){
          showAlertfail();
         }





    
    });
    document.addEventListener("DOMContentLoaded", () => {
      rzp1.open();
    })


    function showAlertpage() {
      Swal.fire({
        icon: "success",
        text: "Your order has placed successfully",
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        
        confirmButtonText: 'Continue Shopping',

      }).then((result) => {
        if (result.isConfirmed) {
          // If "Go to Cart" is clicked, redirect to /cart
          window.location.href = '/dashboard';
        } else {
          // If "Go Back" is clicked, handle as needed

        }
      });
    }


    function showAlertfail() {
      Swal.fire({
        icon: "failed",
        text: "Payment failed",
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        confirmButtonText: 'Continue Shopping',

      }).then((result) => {
        if (result.isConfirmed) {
          // If "Go to Cart" is clicked, redirect to /cart
          window.location.href = '/dashboard';
        } else {
          // If "Go Back" is clicked, handle as needed

        }
      });
    }



  </script>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</body>

</html>